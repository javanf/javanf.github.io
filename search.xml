<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>lnmp快速对接DNS服务商生成SSL证书，https你也可以拥有</title>
      <link href="/20180716/lnmp-ssl/"/>
      <url>/20180716/lnmp-ssl/</url>
      <content type="html"><![CDATA[<p>LNMP 1.5已经添加了对通配符证书的支持，生成通配符证书和Let’sEncrypt平常SSL证书命令有些差异（通配符证书命令是 lnmp dnsssl 域名dns服务商简称，普通证书是lnmp ssl add），最好是使用域名DNS服务商的API，这样才能实现自动续期。</p><h3 id="前期准备工作"><a href="#前期准备工作" class="headerlink" title="前期准备工作"></a>前期准备工作</h3><p>如果要生成通配符证书，首先要准备好一下东西：</p><blockquote><blockquote><p>域名一枚<br>域名DNS服务商的名称及简称<br>域名DNS服务商API操作所需的参数，如Key、Secret或Token之类的。<br>已安装lnmp 1.5最新版或者升级到1.5最新版(不确定的话可以下载最新的安装包，安装包目录下运行 ./upgrade1.x-1.5.sh)<br><a id="more"></a></p></blockquote></blockquote><h3 id="cloudxns获取到了API-KEY和SECRTET-KEY"><a href="#cloudxns获取到了API-KEY和SECRTET-KEY" class="headerlink" title="cloudxns获取到了API KEY和SECRTET KEY"></a>cloudxns获取到了API KEY和SECRTET KEY</h3><p>下面我们已cloudxns为例，cloudxns API需要到 <a href="https://www.cloudxns.net/AccountManage/apimanage.html" target="_blank" rel="noopener">https://www.cloudxns.net/AccountManage/apimanage.html</a> 这里获取API KEY和SECRET KEY（文章最后我们会附上常见域名DNS服务商的简称、获取API方法和所需的参数）。</p><p><img src="/images/pasted-0.png" alt="cloudxns获取到了API KEY和SECRTET KEY"><br>cloudxns的简称为cx，我们也通过cloudxns网站获取到了API KEY和SECRTET KEY，同时添加域名，并在域名供应商管理后台，配置DNS：lv3ns1.ffdns.net, lv3ns2.ffdns.net, lv3ns3.ffdns.net, lv3ns4.ffdns.net，在cloudxns域名管理下面添加一条解析记录到你的服务器。<br><img src="/images/pasted-2.png" alt="cloudxns域名管理"></p><h3 id="linux执行命令"><a href="#linux执行命令" class="headerlink" title="linux执行命令"></a>linux执行命令</h3><p>下面需要在终端里将API操作所需的参数输出供程序使用，命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export CX_Key=&quot;123456&quot;</span><br><span class="line">export CX_Secret=&quot;abcdef&quot;</span><br></pre></td></tr></table></figure></p><p>下面开工开始添加虚拟主机并生成通配符SSL证书，命令：lnmp ssl add，然后看下图，填写你的信息即可。</p><p><img src="/images/pasted-1.png" alt="域名DNS服务商API方式生成SSL证书"></p><p>如果之前输出的API参数没问题的话，等一会儿就会生成完毕，并提示”Let’s Encrypt SSL Certificate create successfully.”。<br>如果失败，请看错误信息，根据错误，来处理。如有错误没有办法解决，请在下方留言。</p><h3 id="网站搭建"><a href="#网站搭建" class="headerlink" title="网站搭建"></a>网站搭建</h3><p>这时候去上面填写的路径看看，我这里写的是/home/wwwroot/<a href="http://www.javanx.cn">www.javanx.cn</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /home/wwwroot/www.javanx.cn</span><br></pre></td></tr></table></figure></p><p>并上传一个index.html文件到这个目录下，这时候你可以访问<a href="https://www.javanx.cn">https://www.javanx.cn</a> (你的域名)，你会发现原来如此简单就搞定了。链接上面已经后小绿锁了。</p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>所有想法，只有自己行动后才能知道难不难，动手实践，多试多揣摩才是硬道理。</p><h3 id="公告"><a href="#公告" class="headerlink" title="公告"></a>公告</h3><p><strong>以后每月5、15、25号更新原创文章，内容不限，喜欢小编的可以点击关注，也可在下方评论留言，你喜欢什么内容，小编根据大家喜欢的内容尝试更新</strong></p>]]></content>
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lnmp </tag>
            
            <tag> ssl证书 </tag>
            
            <tag> https </tag>
            
            <tag> SSL证书 </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jquery如何模拟分页-小白进阶一</title>
      <link href="/20180713/jquery-page/"/>
      <url>/20180713/jquery-page/</url>
      <content type="html"><![CDATA[<p><strong>下面注释很详细，这里就不做过多的介绍了</strong></p><h2 id="html容器"><a href="#html容器" class="headerlink" title="html容器"></a>html容器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"docList"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"more"</span> <span class="attr">id</span>=<span class="string">"docLoadMore"</span>&gt;</span>加载更多<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="js逻辑处理"><a href="#js逻辑处理" class="headerlink" title="js逻辑处理"></a>js逻辑处理</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = &#123;</span><br><span class="line">  <span class="comment">// 分页数据</span></span><br><span class="line">  docPages: &#123;</span><br><span class="line">    pageNo: <span class="number">1</span>, <span class="comment">// 当前页码</span></span><br><span class="line">    pageSize: <span class="number">3</span> <span class="comment">// 一页多少条数据</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 模拟数据</span></span><br><span class="line">  docList: [&#123;</span><br><span class="line">    name: <span class="string">'这是我的第1篇文章'</span></span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    name: <span class="string">'这是我的第2篇文章'</span></span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    name: <span class="string">'这是我的第3篇文章'</span></span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    name: <span class="string">'这是我的第4篇文章'</span></span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    name: <span class="string">'这是我的第5篇文章'</span></span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    name: <span class="string">'这是我的第6篇文章'</span></span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    name: <span class="string">'这是我的第7篇文章'</span></span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    name: <span class="string">'这是我的第8篇文章'</span></span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="string">'#docLoadMore'</span>).on(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getHtml</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// html模板</span></span><br><span class="line">      <span class="keyword">var</span> tpl = <span class="string">'&lt;div class="load-li  dis-flex clearfix"&gt;'</span>+</span><br><span class="line">                  <span class="string">'&lt;span class="align-left"&gt;'</span>+</span><br><span class="line">                      <span class="string">'&lt;img src="../images/productDetails/yh_product_wendang_icon@2x.png" / class="word-icon"&gt;'</span>+</span><br><span class="line">                  <span class="string">'&lt;/span&gt;'</span>+</span><br><span class="line">                  <span class="string">'&lt;span class="color-66 flex1 li-content fs-01"&gt;'</span>+name+<span class="string">'&lt;/span&gt;'</span>+</span><br><span class="line">                  <span class="string">'&lt;span class="align-right"&gt;'</span>+</span><br><span class="line">                      <span class="string">'&lt;img src="../images/productDetails/yh_product_xiazai_icon@2x.png" / class="load-icon"&gt;'</span>+</span><br><span class="line">                  <span class="string">'&lt;/span&gt;'</span>+</span><br><span class="line">              <span class="string">'&lt;/div&gt;'</span>;</span><br><span class="line">      <span class="keyword">return</span> tpl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> pageNo = data.docPages.pageNo;</span><br><span class="line">    <span class="keyword">var</span> pageSize = data.docPages.pageSize;</span><br><span class="line">    <span class="comment">// 计算最多分多少页</span></span><br><span class="line">    <span class="comment">// 总条数 / 一页多少条 = 可以分多少页  如果是小数  向上取整(Math.ceil)</span></span><br><span class="line">    <span class="keyword">let</span> maxPage = <span class="built_in">Math</span>.ceil(data.docList.length / pageSize);</span><br><span class="line">    <span class="comment">// 如果页面大于总页数return</span></span><br><span class="line">    <span class="keyword">if</span> (pageNo &gt; maxPage) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'没有更多了'</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 计算第n页时取第几条到第几条数据</span></span><br><span class="line">    <span class="keyword">var</span> startIndex = (pageNo<span class="number">-1</span>) * pageSize; <span class="comment">// 下标从0开始，所以-1</span></span><br><span class="line">    <span class="comment">// 1:(1-1)*2=&gt;0</span></span><br><span class="line">    <span class="comment">// 2:(2-1)*2=&gt;2</span></span><br><span class="line">    <span class="comment">// 3:(3-1)*2=&gt;4</span></span><br><span class="line">    <span class="comment">// 4:(4-1)*2=&gt;6</span></span><br><span class="line">    <span class="keyword">var</span> endIndex = pageNo * pageSize - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 1: 1*2=&gt;2</span></span><br><span class="line">    <span class="comment">// 2: 2*2=&gt;4</span></span><br><span class="line">    <span class="comment">// 3: 3*2=&gt;6</span></span><br><span class="line">    data.docPages.pageNo ++;</span><br><span class="line">    <span class="comment">// 根据下标找到对应的页码的数据</span></span><br><span class="line">    <span class="keyword">var</span> newPage = vm.data.docList.slice(startIndex, endIndex+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">let</span> html = <span class="string">''</span>;</span><br><span class="line">    newPage.map(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">        html += getHtml(item.name);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 向元素后面插入准备好的html内容</span></span><br><span class="line">    $(<span class="string">'#docList'</span>).append(html);</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p><strong><code>tips：</code>上面代码没有初始化第一页数据，点击一下才会出来第一页的数据，所以可以在页面加载完毕，自动触发一下点击事件</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 页面加载完毕触发一次，作为默认值</span></span><br><span class="line">$(<span class="string">'#docLoadMore'</span>).trigger(<span class="string">'click'</span>);</span><br></pre></td></tr></table></figure></p><h2 id="公告"><a href="#公告" class="headerlink" title="公告"></a>公告</h2><p><strong>以后每月5、15、25号更新原创文章，内容不限，喜欢小编的可以点击关注，也可在下方评论留言，你喜欢什么内容，小编根据大家喜欢的内容尝试更新</strong></p>]]></content>
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web前端 </tag>
            
            <tag> jquery </tag>
            
            <tag> 分页 </tag>
            
            <tag> js分页 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>高级攻城狮从代码规范开始——web前端代码规范</title>
      <link href="/20180713/web-format/"/>
      <url>/20180713/web-format/</url>
      <content type="html"><![CDATA[<h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><h3 id="文件和文件夹命名"><a href="#文件和文件夹命名" class="headerlink" title="文件和文件夹命名"></a>文件和文件夹命名</h3><blockquote><blockquote><p>文件夹和文件名采用英文小写字母命名，多个英语单词用 “-” 分割，不使用驼峰命名，如：hello-world<br>编写组件使用 “c-” 打头，如：编写一个select组件，文件夹或者文件名定义[c-select]</p></blockquote></blockquote><h3 id="样式表命名"><a href="#样式表命名" class="headerlink" title="样式表命名"></a>样式表命名</h3><blockquote><blockquote><p>样式表命名采用英文小写字母命名，多个英语单词用 “-” 分割，不使用驼峰命名，如：hello-world</p></blockquote></blockquote><h3 id="JS命名"><a href="#JS命名" class="headerlink" title="JS命名"></a>JS命名</h3><blockquote><blockquote><p>js变量使用驼峰命名，不使用-号分割<br><a id="more"></a></p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">let</span> foo_bar = <span class="string">'hello eleme'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="keyword">let</span> fooBar = <span class="string">'hello eleme'</span>;</span><br></pre></td></tr></table></figure><h3 id="常量要大写"><a href="#常量要大写" class="headerlink" title="常量要大写"></a>常量要大写</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">let</span> prefix = <span class="string">'https://www.javanx.cn/'</span>;</span><br><span class="line"><span class="keyword">let</span> Prefix = <span class="string">'http://www.javanx.cn/'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="keyword">const</span> PREFIX = <span class="string">'www.javanx.cn'</span>;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>定义dispatch或者commit的请求类型时，按照A_打头代表action，M_打头代表mutation的方式区分请求类型</p></blockquote></blockquote><h3 id="注释命名"><a href="#注释命名" class="headerlink" title="注释命名"></a>注释命名</h3><blockquote><blockquote><p>在stylus和js文件中添加注释时，在“//”后面加入空格再添加文字</p></blockquote></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/*不推荐*/</span><br><span class="line">//不推荐</span><br><span class="line">; // 不推荐</span><br><span class="line"></span><br><span class="line">/* 推荐 */</span><br><span class="line">// 推荐</span><br><span class="line">;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>在写pug模板时，在“//”后面最好加上-再空格，因为“//”会被转义成<!---->，“//-”不会被转义成任何东西</p></blockquote></blockquote><h2 id="统一代码风格"><a href="#统一代码风格" class="headerlink" title="统一代码风格"></a>统一代码风格</h2><h3 id="Stylus代码风格"><a href="#Stylus代码风格" class="headerlink" title="Stylus代码风格"></a>Stylus代码风格</h3><blockquote><blockquote><p>2个空格缩进，UTF-8 编码<br>如果你的代码中包含大括号，确保大括号与选择器之间留空，冒号后面留空，注释内外前后留空</p></blockquote></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 我是注释 */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123; <span class="comment">/* 我是注释 */</span> &#125;</span><br><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red; <span class="comment">/* 我是注释 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>一个选择器中有多个样式声明时每条写一行<br>多个选择器使用逗号隔开时写在不同的行，修改时不容易漏掉逗号后面的选择器</p></blockquote></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>,</span><br><span class="line"><span class="selector-tag">span</span></span><br><span class="line">  <span class="selector-tag">color</span>: <span class="selector-tag">red</span></span><br><span class="line">  <span class="selector-tag">font-size</span>: 12<span class="selector-tag">px</span></span><br></pre></td></tr></table></figure><blockquote><blockquote><p>用逗号分隔的多个样式值写成多行，便于阅读与编辑</p></blockquote></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.block</span> </span><br><span class="line">  <span class="selector-tag">box-shadow</span>: 0 0 0 <span class="selector-tag">rgba</span>(<span class="selector-id">#000</span>, 0<span class="selector-class">.1</span>),</span><br><span class="line">              1<span class="selector-tag">px</span> 1<span class="selector-tag">px</span> 0 <span class="selector-tag">rgba</span>(<span class="selector-id">#000</span>, 0<span class="selector-class">.2</span>),</span><br><span class="line">              2<span class="selector-tag">px</span> 2<span class="selector-tag">px</span> 0 <span class="selector-tag">rgba</span>(<span class="selector-id">#000</span>, 0<span class="selector-class">.3</span>),</span><br><span class="line">              3<span class="selector-tag">px</span> 3<span class="selector-tag">px</span> 0 <span class="selector-tag">rgba</span>(<span class="selector-id">#000</span>, 0<span class="selector-class">.4</span>),</span><br><span class="line">              4<span class="selector-tag">px</span> 4<span class="selector-tag">px</span> 0 <span class="selector-tag">rgba</span>(<span class="selector-id">#000</span>, 0<span class="selector-class">.5</span>)</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>避免使用 ID 选择器，权重太高，不易维护<br>@require和@import支持引入css文件，避免首页产生过多HTTP请求，可以使用这两个关键字合并css文件<br>0 值的单位建议省略，但不强制，因为大部分 0 值的单位是没用的<br>类名中的字母一律小写，只使用字母、数字以及“-”，因为解析样式表时不区分大小写</p></blockquote></blockquote><h3 id="JS代码风格"><a href="#JS代码风格" class="headerlink" title="JS代码风格"></a>JS代码风格</h3><blockquote><blockquote><p>2个空格缩进，UTF-8 编码<br>打开严格模式</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>; <span class="comment">// 写在文件顶端</span></span><br></pre></td></tr></table></figure><blockquote><blockquote><p>使用单引号，这样可以跟 HTML 的双引号更好的一起工作<br>在语句（Statement）的结尾加分号</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不建议</span></span><br><span class="line"><span class="keyword">const</span> fn = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// Long code</span></span><br><span class="line">&#125; <span class="comment">// 没有分号</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 建议</span></span><br><span class="line"><span class="keyword">const</span> fn = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// Long code</span></span><br><span class="line">&#125;; <span class="comment">// 这里有分号</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 踩坑 */</span></span><br><span class="line"><span class="keyword">const</span> f1 = <span class="function"><span class="keyword">function</span> <span class="title">ff1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125; <span class="comment">// 此处漏写分号</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 此处调用了上面的ff1，WHAT THE FUCK</span></span><br><span class="line">&#125;)();</span><br><span class="line"><span class="built_in">console</span>.log(f1); <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> f2 = <span class="function"><span class="keyword">function</span> <span class="title">ff2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125; <span class="comment">// 此处漏写分号</span></span><br><span class="line"><span class="comment">// IIFE</span></span><br><span class="line">;(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// 注意前面的分号</span></span><br><span class="line">&#125;)();</span><br><span class="line"><span class="built_in">console</span>.log(f2); <span class="comment">// function</span></span><br></pre></td></tr></table></figure><blockquote><blockquote><p>在二元和三元运算符的符号与操作数之间添加空格，在非行末的 , ; } 后添加空格，在 { 前添加空格。并在每个逻辑块中间添加空白行。 特别的，在 if、while 等关键字后加空格，与函数调用做区分</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">let</span> foo=<span class="string">'bar'</span>,hello=foo+<span class="number">2</span>,test=<span class="literal">true</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hi</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(foo&amp;&amp;hello)&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(foo)&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(! test)&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="keyword">let</span> foo = <span class="string">'bar'</span>;</span><br><span class="line"><span class="keyword">let</span> hello = foo + <span class="number">2</span>;</span><br><span class="line"><span class="keyword">let</span> test = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hi</span>(<span class="params">arg1, arg2</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (foo &amp;&amp; hello) &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (foo) &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!test) &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>不要为大括号另写一行</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">if</span> (foo)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="keyword">if</span> (foo) &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不允许</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#123;</span><br><span class="line">  a: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一定要</span></span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">  a: <span class="number">1</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>写 else 时不要另起一行<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">if</span> (test) &#123;</span><br><span class="line">  things1();</span><br><span class="line">  things2();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">  things3();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="keyword">if</span> (test) &#123;</span><br><span class="line">  things1();</span><br><span class="line">  things2();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  things3();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote></blockquote><blockquote><blockquote><p>使用变量之前必须先定义，不要定义全局变量</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 变量 undefinedVar 从未定义过</span></span><br><span class="line">undefinedVar = <span class="number">1</span>; <span class="comment">// 严格模式中报错</span></span><br><span class="line"><span class="built_in">console</span>.log(global.undefinedVar); <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">let</span> hello = <span class="number">1</span>, world = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="keyword">let</span> hello = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> world = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">let</span> foo, fee, fxx;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 变量和闭包遇到的坑 */</span></span><br><span class="line"><span class="keyword">void</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; ++i) &#123;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(i); <span class="comment">// undefined i不在闭包范围内</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i) &#123;</span><br><span class="line">        <span class="comment">// Do some other things</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> elements = [ div1, div2, div3 ];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; elements.length; ++i) &#123;</span><br><span class="line">  elements[i].addEventListener(<span class="string">'event'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i); <span class="comment">// 3</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>使用字面量</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不建议</span></span><br><span class="line"><span class="keyword">const</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"><span class="keyword">const</span> array = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">const</span> array = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鉴于 Array 构造函数的特殊性，不建议</span></span><br><span class="line"><span class="keyword">const</span> arr1 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>); <span class="comment">// [4, 5, 6]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 以免与下面混淆</span></span><br><span class="line"><span class="keyword">const</span> arr2 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">4</span>); <span class="comment">// [ undefined * 4 ]</span></span><br><span class="line"><span class="comment">// 等价于（不推荐）</span></span><br><span class="line"><span class="keyword">const</span> arr3 = [];</span><br><span class="line">arr3.length = <span class="number">4</span>;</span><br><span class="line"><span class="comment">// 等价于（不推荐）</span></span><br><span class="line"><span class="keyword">const</span> arr4 = [,,,,];</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'0'</span> <span class="keyword">in</span> arr2, <span class="string">'0'</span> <span class="keyword">in</span> arr3, <span class="string">'0'</span> <span class="keyword">in</span> arr4); <span class="comment">// false, false, false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">'str'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str === <span class="string">'str'</span>); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> bool = <span class="keyword">new</span> <span class="built_in">Boolean</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (bool) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'wat'</span>); <span class="comment">// wat</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当真需要使用字面量包装类时，使用显式强制转换（请先三思）</span></span><br><span class="line"><span class="keyword">let</span> strObject = <span class="built_in">Object</span>(<span class="string">'str'</span>);</span><br><span class="line">strObject.customProperty = someValue;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>建议使用 ===/!== 而非 ==/!=，== 的规则比较复杂，大家可能记不住</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (a == <span class="number">123</span>) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">  a = <span class="built_in">Number</span>(a);</span><br><span class="line">  <span class="keyword">if</span> (a === <span class="number">123</span>) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 隐式转换</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// false</span></span><br><span class="line"><span class="keyword">if</span> (a === <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// true</span></span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">0</span>);</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>对于可能不存在的全局引用可以先做如此判断</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> localStorage !== <span class="string">'undefined'</span>) &#123;</span><br><span class="line">  <span class="comment">// 此时访问 localStorage 绝对不会出现引用错误</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Or</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">'localStorage'</span> <span class="keyword">in</span> self) &#123;</span><br><span class="line">  <span class="comment">// 此时访问 localStorage 绝对不会出现引用错误</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 区分 undefined */</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="literal">undefined</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断一个全局变量是否有声明</span></span><br><span class="line"><span class="string">'a'</span> <span class="keyword">in</span> self; <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断一个变量是否为 undefined 并将未声明的引用作为 undefined 处理</span></span><br><span class="line"><span class="keyword">typeof</span> a !== <span class="string">'undefined'</span>; <span class="comment">// false</span></span><br></pre></td></tr></table></figure><blockquote><blockquote><p>避免无必要的 if 语句、三元运算符</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">let</span> flag1 = arr.length &gt; <span class="number">0</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">let</span> flag2;</span><br><span class="line"><span class="keyword">if</span> (arr.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">  flag2 = <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  flag2 = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="keyword">let</span> flag3 = arr.length &gt; <span class="number">0</span>;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>合理的格式化三元运算符</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">let</span> flag1 = veryLooooooooooonnnnggggggCondition ? resultWhenTruth : resultWhenFalsy;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="keyword">let</span> flag2 = veryLooooooooooonnnnggggggCondition</span><br><span class="line">              ? resultWhenTruth</span><br><span class="line">              : resultWhenFalsy;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>复杂逻辑中建议使用显式转换</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">+num === <span class="built_in">Number</span>(num);</span><br><span class="line">!!bool === <span class="built_in">Boolean</span>(bool);</span><br><span class="line">str + <span class="string">''</span> === <span class="built_in">String</span>(str);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 特别的</span></span><br><span class="line"><span class="keyword">if</span> (bool)</span><br><span class="line"><span class="comment">// 等价于</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Boolean</span>(bool))</span><br><span class="line"><span class="comment">// 故</span></span><br><span class="line"><span class="keyword">if</span> ([]) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'true'</span>); <span class="comment">// true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 而</span></span><br><span class="line"><span class="keyword">if</span> ([] === <span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'true'</span>); <span class="comment">// 无输出</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 另外</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Boolean</span>(<span class="built_in">String</span>(<span class="literal">false</span>))) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'true'</span>); <span class="comment">// true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>不要使用 parseInt 做整数转换，如需使用 parseInt，请给它传入第二个参数 10，在IE上有BUG，WHAT THE FUCK</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> floatValue = <span class="number">123.456</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不要</span></span><br><span class="line"><span class="keyword">let</span> intValue = <span class="built_in">parseInt</span>(floatValue);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以用</span></span><br><span class="line"><span class="keyword">let</span> intValue2 = floatValue | <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更显然的</span></span><br><span class="line"><span class="keyword">let</span> intValue3 = <span class="built_in">Math</span>.floor(floatValue);</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>特殊的数字处理使用 parseFloat 作转换</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 例如有：</span></span><br><span class="line"><span class="comment">// &lt;div id="div" style="width: 10px"&gt;&lt;/div&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> divWidth = getComputedStyle(<span class="built_in">document</span>.getElementById(<span class="string">'div'</span>)).width; <span class="comment">// '10px'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseFloat</span>(divWidth)); <span class="comment">// 10</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Number</span>(divWidth)); <span class="comment">// NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(+divWidth); <span class="comment">// NaN</span></span><br></pre></td></tr></table></figure><blockquote><blockquote><p>如果想自定义的函数按照从上至下的顺序被执行，那你需要使用表达式来定义函数，而不是函数语句</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fee</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="keyword">const</span> foo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* confused */</span></span><br><span class="line"><span class="keyword">void</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 此处可以正常使用函数，但逻辑不清晰</span></span><br><span class="line">  foo();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line">&#125;();</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>只引用一次的函数建议匿名定义，因为名称存在主观因素</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line"><span class="keyword">const</span> foo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br><span class="line">element.onclick = foo;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line">element.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>自执行函数</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line">+<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="keyword">void</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 踩坑 */</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">1</span> <span class="comment">// 此处无分号</span></span><br><span class="line"></span><br><span class="line">+<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">&#125;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 此处 a 的值为 3</span></span><br></pre></td></tr></table></figure><blockquote><blockquote><p>使用Promise解决嵌套问题</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line">async1(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// TODO 1</span></span><br><span class="line">  async2(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// TODO 2</span></span><br><span class="line">    async3(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">// TODO 3</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line"><span class="built_in">Promise</span>.resolve()</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">      async1(resolve);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// TODO 1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">      async2(resolve);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// TODO 2</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve</span>) </span>&#123;</span><br><span class="line">      async3(resolve);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// TODO 3</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>禁止使用未定义的变量<br>禁止使用 eval，非用不可时可以使用 Function 构造器替代<br>禁止使用 with 语句<br>禁止在块作用域中使用函数声明语句</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="comment">// 禁止</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">func1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 允许</span></span><br><span class="line">  <span class="keyword">const</span> func2 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>禁止使用 arguments 映射</p></blockquote></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="function"><span class="keyword">function</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">arguments</span>[<span class="number">0</span>]++;</span><br><span class="line">  <span class="comment">// 此处 a 为 2</span></span><br><span class="line">&#125;(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>禁止使用保留字做变量名如 interface 等</p></blockquote></blockquote><h2 id="公告"><a href="#公告" class="headerlink" title="公告"></a>公告</h2><p><strong>以后每月5、15、25号更新原创文章，内容不限，喜欢小编的可以点击关注，也可在下方评论留言，你喜欢什么内容，小编根据大家喜欢的内容尝试更新</strong></p>]]></content>
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web前端 </tag>
            
            <tag> 代码规范 </tag>
            
            <tag> js规范 </tag>
            
            <tag> css规范 </tag>
            
            <tag> 前端代码规范 </tag>
            
            <tag> 高级攻城狮 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>微信小程序动画两种实现方式</title>
      <link href="/20180710/wx-animate/"/>
      <url>/20180710/wx-animate/</url>
      <content type="html"><![CDATA[<p>开发小程序，实现动画功能，有两种实现方式，下面来看看具体怎么做：</p><p><img src="https://img.mukewang.com/5b44630300017b4900170022.gif" alt="小程序动画"></p><h2 id="JS动画"><a href="#JS动画" class="headerlink" title="JS动画"></a>JS动画</h2><p><strong>利用小程序API提供的<code>wx.createAnimation(OBJECT)</code>实现，API中是这样说：创建一个动画实例animation。调用实例的方法来描述动画。最后通过动画实例的export方法导出动画数据传递给组件的<code>animation</code>属性。</strong></p><a id="more"></a><p>wxml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class=&quot;animation&quot;&gt;</span><br><span class="line">  &lt;view class=&quot;dis-flex&quot;&gt;</span><br><span class="line">    &lt;view class=&apos;flex3&apos; animation=&quot;&#123;&#123;lAnimate&#125;&#125;&quot;&gt;&#123;&#123;start&#125;&#125;&lt;/view&gt;</span><br><span class="line">    &lt;view class=&apos;flex1&apos; bindtap=&quot;trigger&quot;&gt;</span><br><span class="line">      &lt;em class=&apos;iconfont switch-icon&apos;&gt;&lt;/em&gt;</span><br><span class="line">    &lt;/view&gt; </span><br><span class="line">    &lt;view class=&apos;flex3&apos; animation=&quot;&#123;&#123;rAnimate&#125;&#125;&quot;&gt;&#123;&#123;end&#125;&#125;&lt;/view&gt;</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure></p><p>css<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">  font-family: &apos;iconfont&apos;;  /* project id 703892 */</span><br><span class="line">  src: url(&apos;//at.alicdn.com/t/font_703892_u8zob8nchpf.eot&apos;);</span><br><span class="line">  src: url(&apos;//at.alicdn.com/t/font_703892_u8zob8nchpf.eot?#iefix&apos;) format(&apos;embedded-opentype&apos;),</span><br><span class="line">  url(&apos;//at.alicdn.com/t/font_703892_u8zob8nchpf.woff&apos;) format(&apos;woff&apos;),</span><br><span class="line">  url(&apos;//at.alicdn.com/t/font_703892_u8zob8nchpf.ttf&apos;) format(&apos;truetype&apos;),</span><br><span class="line">  url(&apos;//at.alicdn.com/t/font_703892_u8zob8nchpf.svg#iconfont&apos;) format(&apos;svg&apos;);</span><br><span class="line">&#125;</span><br><span class="line">.iconfont &#123;</span><br><span class="line">  font-family:&quot;iconfont&quot; !important;</span><br><span class="line">  font-size:16px;</span><br><span class="line">  font-style:normal;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">&#125;</span><br><span class="line">.animation&#123;</span><br><span class="line">  margin-top: 20rpx;</span><br><span class="line">  padding: 10rpx 30rpx;</span><br><span class="line">&#125;</span><br><span class="line">.dis-flex&#123;</span><br><span class="line">    display: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.flex1&#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.flex3&#123;</span><br><span class="line">    flex: 3;</span><br><span class="line">    text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.switch-icon:before &#123; </span><br><span class="line">  content: &quot;\e8c8&quot;; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    lAnimate: &apos;&apos;,</span><br><span class="line">    rAnimate: &apos;&apos;,</span><br><span class="line">    start: &apos;北京&apos;,</span><br><span class="line">    end: &apos;深圳&apos;</span><br><span class="line">  &#125;,</span><br><span class="line">  trigger() &#123;</span><br><span class="line">    let vm = this;</span><br><span class="line">    let option = &#123;</span><br><span class="line">      duration: 100, // 动画执行时间</span><br><span class="line">      timingFunction: &apos;ease-in&apos; // 动画执行效果</span><br><span class="line">    &#125;;</span><br><span class="line">    var lanimation = wx.createAnimation(option); // 创建动画</span><br><span class="line">    var ranimation = wx.createAnimation(option);</span><br><span class="line">    // 起点</span><br><span class="line">    lanimation.translateX(100);</span><br><span class="line">    lanimation.opacity(0.1).step();</span><br><span class="line">    // 终点</span><br><span class="line">    ranimation.translateX(-100);</span><br><span class="line">    ranimation.opacity(0.1).step();</span><br><span class="line">    vm.setData(&#123;</span><br><span class="line">      lAnimate: lanimation.export(),// 开始执行动画</span><br><span class="line">      rAnimate: ranimation.export() // 开始执行动画</span><br><span class="line">    &#125;)</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">      // 起点</span><br><span class="line">      lanimation.translateX(0);</span><br><span class="line">      lanimation.opacity(1).step();</span><br><span class="line">      // 终点</span><br><span class="line">      ranimation.translateX(0);</span><br><span class="line">      ranimation.opacity(1).step();</span><br><span class="line">      var temp = vm.data.start;</span><br><span class="line">      vm.setData(&#123;</span><br><span class="line">        lAnimate: lanimation.export(),// 开始执行动画</span><br><span class="line">        rAnimate: ranimation.export(),// 开始执行动画</span><br><span class="line">        end: temp,</span><br><span class="line">        start: vm.data.end</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;, 100);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h2 id="CSS3动画"><a href="#CSS3动画" class="headerlink" title="CSS3动画"></a>CSS3动画</h2><p><strong>CSS3动画还是用<code>animation</code>来完成，需要注意的是只需要<code>@-webkit-keyframes</code>,不需要其他的，如<code>@-moz-keyframes</code>，运用会报错</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@-webkit-keyframes lanimation</span><br><span class="line">&#123;</span><br><span class="line">  from &#123;left:px2rpx(0px);&#125;</span><br><span class="line">  to &#123;left:px2rpx(140px);&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.start&#123;</span><br><span class="line">  animation lanimation 2.5s ease-in infinite</span><br><span class="line">  animation-delay 0.6s</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="公告"><a href="#公告" class="headerlink" title="公告"></a>公告</h2><p><strong>以后每月5、15、25号更新原创文章，内容不限，喜欢小编的可以点击关注，也可在下方评论留言，你喜欢什么内容，小编根据大家喜欢的内容尝试更新</strong></p>]]></content>
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
            <tag> 动画效果 </tag>
            
            <tag> 小程序动画 </tag>
            
            <tag> js动画 </tag>
            
            <tag> css3动画 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue与微信小程序的一些区别，你知道吗？</title>
      <link href="/20180706/vue-wx/"/>
      <url>/20180706/vue-wx/</url>
      <content type="html"><![CDATA[<h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><p>vue：使用v-if指令，v-else表示v-if的else块，v-else-if表示v-if 的“else-if 块”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-if=&quot;type === &apos;A&apos;&quot;&gt;</span><br><span class="line">  A</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div v-else-if=&quot;type === &apos;B&apos;&quot;&gt;</span><br><span class="line">  B</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div v-else-if=&quot;type === &apos;C&apos;&quot;&gt;</span><br><span class="line">  C</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div v-else&gt;</span><br><span class="line">  Not A/B/C</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>微信小程序：使用wx:if,wx:else表示wx:if的else块，wx:elif表示wx:if的”else-if”块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;view wx:if=&quot;&#123;&#123;length &gt; 5&#125;&#125;&quot;&gt; 1 &lt;/view&gt;</span><br><span class="line">&lt;view wx:elif=&quot;&#123;&#123;length &gt; 2&#125;&#125;&quot;&gt; 2 &lt;/view&gt;</span><br><span class="line">&lt;view wx:else&gt; 3 &lt;/view&gt;</span><br></pre></td></tr></table></figure></p><h2 id="显示隐藏元素"><a href="#显示隐藏元素" class="headerlink" title="显示隐藏元素"></a>显示隐藏元素</h2><p>vue：<code>v-show=&quot;&quot;</code><br>微信小程序：<code>hidden=&quot;&quot;</code></p><h2 id="绑定class"><a href="#绑定class" class="headerlink" title="绑定class"></a>绑定class</h2><p>vue：全用v-bind，或者简写为:bind,和本有的class分开写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;test&quot; v-bind:class=&quot;&#123; active: isActive &#125;&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>微信小程序：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view class=&quot;test &#123;&#123;isActive ? &apos;active&apos;:&apos;&apos; &#125;&#125;&quot;&gt;&lt;/view&gt;</span><br></pre></td></tr></table></figure></p><h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><p>vue：使用v-on:event绑定事件，或者使用@event绑定事件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;button v-on:click=&quot;counter += 1&quot;&gt;Add 1&lt;/button&gt;</span><br><span class="line">&lt;button v-on:click.stop=&quot;counter+=1&quot;&gt;Add1&lt;/button&gt;  //阻止事件冒泡</span><br></pre></td></tr></table></figure></p><p>微信小程序：全用bindtap(bind+event)，或者catchtap(catch+event)绑定事件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;button bindtap=&quot;clickMe&quot;&gt;点击我&lt;/button&gt;</span><br><span class="line">&lt;button catchtap=&quot;clickMe&quot;&gt;点击我&lt;/button&gt;  //阻止事件冒泡</span><br></pre></td></tr></table></figure></p><h2 id="绑定值"><a href="#绑定值" class="headerlink" title="绑定值"></a>绑定值</h2><p>vue：vue动态绑定一个变量的值为元素的某个属性的时候，会在变量前面加上冒号：，例：<code>&lt;img :src=&quot;imgSrc&quot;/&gt;</code><br>微信小程序：绑定某个变量的值为元素属性时，会用两个大括号括起来。例：<code>&lt;image src=&quot;&quot;&gt;&lt;/image&gt;</code></p><h2 id="绑定事件传参"><a href="#绑定事件传参" class="headerlink" title="绑定事件传参"></a>绑定事件传参</h2><p>vue：vue绑定事件的函数传参数时，可以把参数写在函数后面的括号里<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div @click=&quot;changeTab(1)&quot;&gt;哈哈&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>微信小程序：微信小程序的事件我试过只能传函数名，至于函数值，可以绑定到元素中，在函数中获取<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;view data-tab=&quot;1&quot; catchtap=&quot;changeTab&quot;&gt;哈哈&lt;/view&gt;</span><br><span class="line">// js</span><br><span class="line">changeTab(e)&#123;</span><br><span class="line">   var _tab = e.currentTarget.dataset.tab;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="设置值"><a href="#设置值" class="headerlink" title="设置值"></a>设置值</h2><p>vue：设置test的值可以用，<code>this.test = true;</code>获取test的值可以用<code>this.test.</code><br>微信小程序：设置test的值要用<code>this.setData({test:true});</code>获取test的值用<code>this.data.test</code></p>]]></content>
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>小程序如何解决重复点击？</title>
      <link href="/20180605/wx-click/"/>
      <url>/20180605/wx-click/</url>
      <content type="html"><![CDATA[<p>小程序有非常蛋疼的问题，没有很好的优化事件机制，导致重复点击会触发多次（如果打开页面，快速多次点击，会打开多个重复的页面，返回时就会关掉一个还有一个…）</p><p>网上很多都是给按钮或者事件按钮添加disabled属性，通过事件改变值，并判断此时能否被点击。经过本人测试，在开发者工具上面是可以的。但是在真机上面快速点击多次还是会触发多次。</p><a id="more"></a><p>下面提供更科学的办法：</p><h2 id="data里面定义3个属性"><a href="#data里面定义3个属性" class="headerlink" title="data里面定义3个属性"></a>data里面定义3个属性</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">touchStartTime: 0, // 触摸开始时间</span><br><span class="line">touchEndTime: 0, // 触摸结束时间</span><br><span class="line">lastTapTime: 0 // 最后一次单击事件点击发生时间</span><br></pre></td></tr></table></figure><h2 id="页面触发这3个事件"><a href="#页面触发这3个事件" class="headerlink" title="页面触发这3个事件"></a>页面触发这3个事件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view @tap=&quot;doubleTap&quot; @touchstart=&quot;touchStart&quot; @touchend=&quot;touchEnd&quot;&gt;测试重复点击事件&lt;/view&gt;</span><br></pre></td></tr></table></figure><h2 id="methods里面添加3个方法"><a href="#methods里面添加3个方法" class="headerlink" title="methods里面添加3个方法"></a>methods里面添加3个方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 防止重复点击</span><br><span class="line">    touchStart(e) &#123;</span><br><span class="line">      this.touchStartTime = e.timeStamp;</span><br><span class="line">    &#125;,</span><br><span class="line">    touchEnd(e) &#123;</span><br><span class="line">      this.touchEndTime = e.timeStamp;</span><br><span class="line">    &#125;,</span><br><span class="line">    doubleTap(item, e) &#123;</span><br><span class="line">      var vm = this;</span><br><span class="line">      // 控制点击事件在350ms内触发，加这层判断是为了防止长按时会触发点击事件</span><br><span class="line">      if (vm.touchEndTime - vm.touchStartTime &lt; 350) &#123;</span><br><span class="line">        // 当前点击的时间</span><br><span class="line">        var currentTime = e.timeStamp;</span><br><span class="line">        var lastTapTime = vm.lastTapTime;</span><br><span class="line">        // 更新最后一次点击时间</span><br><span class="line">        vm.lastTapTime = currentTime;</span><br><span class="line">        // 如果两次点击时间在300毫秒内，则认为是双击事件</span><br><span class="line">        if (currentTime - lastTapTime &gt; 300) &#123;</span><br><span class="line">          // do something 点击事件具体执行那个业务</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
            <tag> 重复事件 </tag>
            
            <tag> 多次点击 </tag>
            
            <tag> 事件冒泡 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PC/移动端弹出层插件之layer</title>
      <link href="/20160825/layer/"/>
      <url>/20160825/layer/</url>
      <content type="html"><![CDATA[<p>还在自己写弹出层吗？亲，我来解决你的烦恼，为你推荐一款多样性、易集成的插件：layer。</p><h2 id="layer是什么？"><a href="#layer是什么？" class="headerlink" title="layer是什么？"></a>layer是什么？</h2><p>layer是一款近年来备受青睐的web弹层组件，她具备全方位的解决方案，致力于服务各水平段的开发人员，您的页面会轻松地拥有丰富友好的操作体验。layer兼容了包括IE6在内的所有主流浏览器。</p><a id="more"></a><h2 id="layer提供哪些弹出层样式？（以下图片左侧是代码，右侧是效果）"><a href="#layer提供哪些弹出层样式？（以下图片左侧是代码，右侧是效果）" class="headerlink" title="layer提供哪些弹出层样式？（以下图片左侧是代码，右侧是效果）"></a>layer提供哪些弹出层样式？（以下图片左侧是代码，右侧是效果）</h2><p>（1）、提示层、询问层<br><img src="https://img.mukewang.com/57beafcd0001b38706660233.png" alt="图片描述"><br>（2）、小小tips层（取代title）<br><img src="https://img.mukewang.com/57beb0b2000170e306300197.jpg" alt="图片描述"><br>（3）、页面层、iframe层<br><img src="https://img.mukewang.com/57beb102000132ab07820348.png" alt="图片描述"><br>（4）、加载层、loading层<br>（5）、相册层<br>（6）、tab层（tabbar）<br>等等。</p><h2 id="提过多种皮肤，如果觉得不够爽，完全可以自定义。"><a href="#提过多种皮肤，如果觉得不够爽，完全可以自定义。" class="headerlink" title="提过多种皮肤，如果觉得不够爽，完全可以自定义。"></a>提过多种皮肤，如果觉得不够爽，完全可以自定义。</h2><h2 id="提供完整的api"><a href="#提供完整的api" class="headerlink" title="提供完整的api"></a>提供完整的api</h2><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><p>（1）、html代码中引入layer.js<br>（2）、直接调用，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//询问框</span><br><span class="line">layer.confirm(&apos;您是如何看待前端开发？&apos;, &#123;</span><br><span class="line">  btn: [&apos;重要&apos;,&apos;奇葩&apos;] //按钮</span><br><span class="line">&#125;, function()&#123;</span><br><span class="line">  layer.msg(&apos;的确很重要&apos;, &#123;icon: 1&#125;);</span><br><span class="line">&#125;, function()&#123;</span><br><span class="line">  layer.msg(&apos;也可以这样&apos;, &#123;</span><br><span class="line">    time: 20000, //20s后自动关闭</span><br><span class="line">    btn: [&apos;明白了&apos;, &apos;知道了&apos;]</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>是不是很简单了？<br>看我讲了半天，想一睹为快了吧，快点击吧<a href="http://layer.layui.com/" target="_blank" rel="noopener">http://layer.layui.com/</a>或者百度一下layer，进去也是可以的。</p><p>同时LayUI还提供很多前端插件，如分页组件（layPage）、日期组件（layDate）、javascript模板引擎（layTpl）和layIM，都是很好的插件，推荐大家学习。</p>]]></content>
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> layer </tag>
            
            <tag> pc弹出层 </tag>
            
            <tag> H5弹出层 </tag>
            
            <tag> layer ui </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>中秋节快到了打造属于H5动画页面</title>
      <link href="/20160805/h5-animate/"/>
      <url>/20160805/h5-animate/</url>
      <content type="html"><![CDATA[<h2 id="导读"><a href="#导读" class="headerlink" title="导读"></a>导读</h2><p>刚刚看了慕课的文章：<a href="http://www.imooc.com/learn/514" target="_blank" rel="noopener">http://www.imooc.com/learn/514</a><br>感觉fullPage.js插件并不是很理想，所以推荐另外一个插件swiper。</p><p>现在H5广告已经是满天飞，各个公司的需求也是越来越大。特别是在微信里面推广的很多，目前也有很多在线制作的，但是都有各种尾巴，去掉也很麻烦。今天为大家推荐一款制作简单，同时自己定制源码，没有任何尾巴。<br>1、首先准备PSD设计图，然后准备开始制作了。<br>2、Swiper 插件，swiper同时提供一个 Swiper Animate<br>3、开始写代码了</p><a id="more"></a><h2 id="html框架，并引入需要的js、css"><a href="#html框架，并引入需要的js、css" class="headerlink" title="html框架，并引入需要的js、css"></a>html框架，并引入需要的js、css</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/swiper.min.css&quot;&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/animate.min.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;swiper-container&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;swiper-wrapper&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;swiper-slide&quot;&gt;Slide 1&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;swiper-slide&quot;&gt;Slide 2&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;swiper-slide&quot;&gt;Slide 3&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 如果需要分页器 --&gt;</span><br><span class="line">        &lt;div class=&quot;swiper-pagination&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;!-- 如果需要导航按钮 --&gt;</span><br><span class="line">        &lt;div class=&quot;swiper-button-prev&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;swiper-button-next&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;!-- 如果需要滚动条 --&gt;</span><br><span class="line">        &lt;div class=&quot;swiper-scrollbar&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script src=&quot;path/to/swiper.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;path/to/swiper.animate.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="设置样式"><a href="#设置样式" class="headerlink" title="设置样式"></a>设置样式</h2><p>  <strong>(手机一屏一屏展示肯定都是100%)</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.swiper-container &#123;</span><br><span class="line">    width: 600px;</span><br><span class="line">    height: 300px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">var mySwiper = new Swiper(&apos;.swiper-container&apos;, &#123;</span><br><span class="line">    direction: &apos;vertical&apos;,</span><br><span class="line">    loop: true,</span><br><span class="line"></span><br><span class="line">    // 如果需要分页器</span><br><span class="line">    pagination: &apos;.swiper-pagination&apos;,</span><br><span class="line"></span><br><span class="line">    // 如果需要前进后退按钮</span><br><span class="line">    nextButton: &apos;.swiper-button-next&apos;,</span><br><span class="line">    prevButton: &apos;.swiper-button-prev&apos;,</span><br><span class="line"></span><br><span class="line">    // 如果需要滚动条</span><br><span class="line">    scrollbar: &apos;.swiper-scrollbar&apos;,</span><br><span class="line">    onInit: function(swiper) &#123; //Swiper2.x的初始化是onFirstInit</span><br><span class="line">        swiperAnimateCache(swiper); //隐藏动画元素 </span><br><span class="line">        swiperAnimate(swiper); //初始化完成开始动画</span><br><span class="line">    &#125;,</span><br><span class="line">    onSlideChangeEnd: function(swiper) &#123;</span><br><span class="line">        swiperAnimate(swiper); //每个slide切换结束时也运行当前slide动画</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="给元素添加动画"><a href="#给元素添加动画" class="headerlink" title="给元素添加动画"></a>给元素添加动画</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p class=&quot;ani&quot; swiper-animate-effect=&quot;fadeInUp&quot; swiper-animate-duration=&quot;0.5s&quot; swiper-animate-delay=&quot;0.3s&quot;&gt;内容&lt;/p&gt;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>在需要运动的元素上面增加类名  ani   ，和其他的类似插件相同，Swiper Animate需要指定几个参数：</p><pre><code>swiper-animate-effect：切换效果，例如 fadeInUp swiper-animate-duration：可选，动画持续时间（单位秒），例如 0.5sswiper-animate-delay：可选，动画延迟时间（单位秒），例如 0.3s    动画效果参考 [http://www.swiper.com.cn/usage/animate/index.html][1]</code></pre><p>希望大家多多关注。<br>  [1]: <a href="http://www.swiper.com.cn/usage/animate/index.html" target="_blank" rel="noopener">http://www.swiper.com.cn/usage/animate/index.html</a></p>]]></content>
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> H5海报 </tag>
            
            <tag> H5轮播图 </tag>
            
            <tag> swiper </tag>
            
            <tag> H5婚礼请柬 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
